{"version":3,"sources":["components/MarkdownEditor.js","components/MarkdownPreview.js","components/MarkdownPreviewer.js","index.js"],"names":["MarkdownEditor","props","text","change","react_default","a","createElement","reactstrap_es","className","for","type","name","id","rows","onChange","defaultValue","MarkdownPreview","htmlText","dangerouslySetInnerHTML","MarkdownPreviewer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","value","target","setState","getMarkdown","onloadStr","renderer","marked","Renderer","link","href","title","concat","setOptions","breaks","state","__html","sanitize","_this$state","xs","components_MarkdownEditor","components_MarkdownPreview","Component","ReactDOM","render","components_MarkdownPreviewer","document","getElementById"],"mappings":"6NA4BeA,EAxBQ,SAACC,GAAU,IACzBC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OACd,OACCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,SACpBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOE,IAAI,UAAX,yCAGAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOG,KAAK,WACXC,KAAK,SACLC,GAAG,SACHC,KAAK,KACLC,SAAUX,EACVY,aAAcb,OCEJc,EAfS,SAACf,GACxB,IAAMgB,EAAWhB,EAAMgB,SACvB,OACCb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,SACpBJ,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,WAASM,GAAG,UACXM,wBAAyBD,sBCwEdE,cA3Ed,SAAAA,EAAYlB,GAAO,IAAAmB,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAClBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMtB,KAiCP0B,aAAe,SAACC,GAAU,IACjBC,EAAUD,EAAME,OAAhBD,MACRT,EAAKW,SAAS,CACb7B,KAAM2B,EACNZ,SAAUG,EAAKY,YAAYH,MApC5B,IAAMI,EAAS,6xBAgBTC,EAAW,IAAIC,IAAOC,SAlBV,OAoBlBF,EAASG,KAAO,SAACC,EAAMC,EAAOrC,GAAd,kBAAAsC,OAAmCF,EAAnC,aAAAE,OAAmDD,EAAnD,sBAAAC,OAA6EtC,EAA7E,SAGhBiC,IAAOM,WAAW,CACjBC,QAAQ,EACRR,SAAUA,IAGXd,EAAKuB,MAAQ,CACZzC,KAAM+B,EACNhB,SAAUG,EAAKY,YAAYC,IA9BVb,2EA0CPlB,GAGX,MADiB,CAAE0C,OADAT,IAAOjC,EAAM,CAAE2C,UAAU,sCAKpC,IAAAC,EACmBvB,KAAKoB,MAAxBzC,EADA4C,EACA5C,KAAMe,EADN6B,EACM7B,SACRd,EAASoB,KAAKI,aACpB,OACCvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,oBAAd,wBAKFJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwC,GAAG,KACP3C,EAAAC,EAAAC,cAAC0C,EAAD,CAAgB9C,KAAMA,EACrBC,OAAQA,KAEVC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwC,GAAG,KACP3C,EAAAC,EAAAC,cAAC2C,EAAD,CACChC,SAAUA,cApEeiC,aCDhCC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAAuBC,SAASC,eAAe","file":"static/js/main.ef4cd87d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { FormGroup, Label, Input, Jumbotron } from 'reactstrap';\r\n\r\nconst MarkdownEditor = (props) => {\r\n\tconst { text, change } = props;\r\n\treturn (\r\n\t\t<Jumbotron className=\"h-100\">\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for=\"editor\">\r\n\t\t\t\t\tEnter Github flavored markdown here :\r\n\t\t\t</Label>\r\n\t\t\t\t<Input type=\"textarea\"\r\n\t\t\t\t\tname=\"editor\"\r\n\t\t\t\t\tid=\"editor\"\r\n\t\t\t\t\trows=\"20\"\r\n\t\t\t\t\tonChange={change}\r\n\t\t\t\t\tdefaultValue={text} />\r\n\t\t\t</FormGroup>\r\n\t\t</Jumbotron>\r\n\t);\r\n};\r\n\r\nMarkdownEditor.propTypes = {\r\n\ttext: PropTypes.string,\r\n\tchange: PropTypes.func\r\n}\r\n\r\nexport default MarkdownEditor;","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Jumbotron } from 'reactstrap';\r\n\r\nconst MarkdownPreview = (props) => {\r\n\tconst htmlText = props.htmlText;\r\n\treturn (\r\n\t\t<Jumbotron className=\"h-100\">\r\n\t\t\t<p>See the parsed result here :</p>\r\n\t\t\t<section id=\"preview\"\r\n\t\t\t\tdangerouslySetInnerHTML={htmlText} />\r\n\t\t</Jumbotron>\r\n\t);\r\n};\r\n\r\nMarkdownPreview.propTypes = {\r\n\thtmlText: PropTypes.object\r\n}\r\n\r\nexport default MarkdownPreview;","import React, { Component } from 'react';\r\nimport MarkdownEditor from './MarkdownEditor';\r\nimport MarkdownPreview from './MarkdownPreview';\r\nimport marked from 'marked';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nclass MarkdownPreviewer extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst onloadStr = `# Markdown Previewer\\n## A markdown previewer\\n[link to the exercise](https://learn.freecodecamp.org/front-end-libraries/front-end-libraries-projects/build-a-markdown-previewer/)\\n\r\n\\`\\`\\`javascript\r\nimport marked from 'marked';\r\ngetMarkdown(text) {\r\n\tconst markedText = marked(text, { sanitize: true });\r\n\tconst htmlText = { __html: markedText };\r\n\treturn htmlText;\r\n}\r\n\\`\\`\\`\r\n* you can parse\\n- you may parse\\n+ you must parse\\n\r\nThere is some \\`inline code\\` here, but it sucks...\\n\r\n> Parse it if you want it\\n> If you don't want to parse, don't parse\\n> If you want to parse, parse\\n> If you don't know, or if you don't know what is parsing, parse\\n\r\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Parse plz\")\\nParse, **parse** or __parse__.\r\n\r\n`;\r\n\t\t// Link renderer\r\n\t\tconst renderer = new marked.Renderer();\r\n\r\n\t\trenderer.link = (href, title, text) => `<a href=\"${href}\" title=\"${title}\" target=\"_blank\">${text}</a>`;\r\n\r\n\t\t// Set breaks and new renderer (optional)\r\n\t\tmarked.setOptions({\r\n\t\t\tbreaks: true,\r\n\t\t\trenderer: renderer\r\n\t\t});\r\n\r\n\t\tthis.state = {\r\n\t\t\ttext: onloadStr,\r\n\t\t\thtmlText: this.getMarkdown(onloadStr)\r\n\t\t}\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tconst { value } = event.target;\r\n\t\tthis.setState({\r\n\t\t\ttext: value,\r\n\t\t\thtmlText: this.getMarkdown(value)\r\n\t\t});\r\n\t}\r\n\r\n\tgetMarkdown(text) {\r\n\t\tconst markedText = marked(text, { sanitize: true });\r\n\t\tconst htmlText = { __html: markedText };\r\n\t\treturn htmlText;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { text, htmlText } = this.state;\r\n\t\tconst change = this.handleChange;\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<h1 className=\"text-center my-5\">\r\n\t\t\t\t\t\t\tMarkdown Previewer\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col xs='6'>\r\n\t\t\t\t\t\t<MarkdownEditor text={text}\r\n\t\t\t\t\t\t\tchange={change} />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col xs='6'>\r\n\t\t\t\t\t\t<MarkdownPreview\r\n\t\t\t\t\t\t\thtmlText={htmlText} />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MarkdownPreviewer;","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MarkdownPreviewer from './components/MarkdownPreviewer';\n\nReactDOM.render(<MarkdownPreviewer />, document.getElementById('root'));"],"sourceRoot":""}